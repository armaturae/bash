#!/bin/bash

# Python
# Python should not write bytecode
export PYTHONDONTWRITEBYTECODE=1

# Go
export GOPATH=${HOME}/.go
export PATH="${PATH}:${GOPATH}/bin"

# Rust
export PATH="$PATH:${HOME}/.cargo/bin"
touch ${HOME}/.cargo/env
source ${HOME}/.cargo/env

# GCC
# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# User binary path
export PATH=${PATH}:${HOME}/.local/bin

# Locale
export LC_ALL=en_US.UTF-8

# Utilities path
export PATH=${PATH}:${HOME}/.utils

# Editor
if [ -x "$(command -v nvim)" ]; then
        export VISUAL=nvim
else
        export VISUAL=vi
fi
export EDITOR="$VISUAL"

# Pager
if [ -x "$(command -v bat)" ]; then
        PAGER=bat
fi

# Taskwarrior
if [ -x "$(command -v task)" ]; then
        export TASKWARRIOR_DATA_DIR=$HOME/.task
fi

# Weechat
if [ -x "$(command -v weechat)" ]; then
        export IRC_CLIENT="weechat"
        export IRC_NICKNAME="$USER"
fi

# Zoxide
if [ -x "$(command -v zoxide)" ]; then
        eval "$(zoxide init bash)"
fi

# Alacritty
if [ -x "$(command -v alacritty)" ]; then
        export LIBGL_ALWAYS_SOFTWARE=1
fi

# Gopass
if [ -x "$(command -v gopass )" ]; then
        source <(gopass completion bash)
fi

# fzf
if [ -x "$(command -v fzf)" ]; then
        source "${HOME}/.bash_completion.d/fzf.bash-completion"
fi

# GnuPG
export GPG_TTY=$(tty)
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
gpgconf --launch gpg-agent
gpg-connect-agent updatestartuptty /bye

# Dotfiles
export DOTFILES="${HOME}/.dotfiles"

# OpenVPN
export OPENVPN_PROFILE_DIR="${HOME}/.openvpn"

# Transmissions
if [ -x "$(command -v transmission-daemon)" ]; then
        export TRANSMISSION_HOST="0.0.0.0"
        export TRANSMISSION_PORT="9091"
fi

# for rotating wallpapers
export WALLPAPER_DIR="${HOME}/.wallpapers"

# get platform in lowercase
export PLATFORM="$(uname -a | cut -d ' ' -f 1 | awk '{print tolower($0)}')"

# pythons' virtualenvwrapper
if [ -x "$(command -v virtualenvwrapper.sh)" ]; then
        export WORKON_HOME="${HOME}/.virtualenvs"
        export VIRTUALENVWRAPPER_PYTHON="/usr/bin/python"
        source $(which virtualenvwrapper.sh)
fi

# aws-vault
complete -C aws_completer aws-vault
export AWS_VAULT_PROMPT=terminal
export AWS_VAULT_BACKEND=pass


# Starship
export STARSHIP_CONFIG="${HOME}/.config/starship.toml"
eval "$(starship init bash)"

# Kubectl plugins
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

# NPM
export NODE_PATH=$HOME/.npm
